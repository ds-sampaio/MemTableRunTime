unit FrmPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls,System.JSON,DataSet.Serialize,
  FireDAC.Stan.StorageBin, GestorCloud.Controller.Factory.Table,
  GestorCloud.Model.Table.Firedac, GestorCloud.Model.Table.Interfaces,
  System.Generics.Collections;

type
  TForm1 = class(TForm)
    Memo1: TMemo;
    Memo2: TMemo;
    DBGrid1: TDBGrid;
    DBGrid2: TDBGrid;
    mtPai: TFDMemTable;
    mtpart_funcionario: TFDMemTable;
    dtsPai: TDataSource;
    dtsFilho: TDataSource;
    Button1: TButton;
    FDMemTable1: TFDMemTable;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
    FJsonObj,FJsonData,FJsonStructure : TJSONObject;
    FListMemTable : TList<iTable>;
    procedure CriaJSON;
    procedure SetPropriedadesMT;
    procedure InitializaMasterDetail;
  public
    { Public declarations }
  end;


var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
begin
  FListMemTable : TList<iTable>.Create;
  FListMemTable.Add(TFactoryTable.New.Table);
  FListMemTable.Add(TFactoryTable.New.Table);
  dtsPai.DataSet   := FListMemTable[0];
  dtsFilho.DataSet := FListMemTable[1];


  CriaJSON;
  SetPropriedadesMT;

  //FData := (FJsonObj.GetValue('data'));
  Memo2.Lines.Add(mtPai.ToJSONObject().ToJSON);
 // mtPai.LoadFromJSON(Memo1.Text);


end;

procedure TForm1.CriaJSON;
begin
  FJsonObj   := TJSONObject
                   .ParseJSONValue(TEncoding
                                     .UTF8
                                     .GetBytes(Memo1.Text),
                                   0) as TJSONObject;

  //deve ter outra forma de fazer isso sem ter q criar duas var,ainda não sei como
  FJsonData      := FJsonObj.GetValue('data') as TJSONObject;
  FJsonStructure := FJsonObj.GetValue('structure') as TJSONObject;
end;

procedure TForm1.SetPropriedadesMT;
var
  I: Integer;
begin
  TDataSetSerializeConfig.GetInstance.CaseNameDefinition :=
    TCaseNameDefinition.cndLower;

  mtpart_funcionario.LoadStructure(FJsonStructure.GetValue('part_funcionario') as TJSONArray);

  mtPai.LoadStructure(FJsonStructure.GetValue('participante') as TJSONArray);

  InitializaMasterDetail;

  mtPai.LoadFromJSON(FJsonData.GetValue('participante') as TJSONArray);


end;

procedure TForm1.InitializaMasterDetail;
begin
//  mtPai.Open;
//
//  mtpart_funcionario.Open;
//  mtpart_funcionario.MasterSource := dtsPai;
//  mtpart_funcionario.MasterFields := 'id_participante'; //mtCountriesID.FieldName;
//  mtpart_funcionario.DetailFields := 'id_participante'; //mtStatesID_COUNTRY.FieldName;
//  mtpart_funcionario.IndexFieldNames := 'id_participante';//mtStatesID_COUNTRY.FieldName;

  FListMemTable[0].DataSet.Open; //Pai
  FListMemTable[1].DataSet.Open;
  FListMemTable[1].DataSet.MasterSource := dtsPai;
  FListMemTable[1].DataSet.MasterFields := 'id_participante'; //mtCountriesID.FieldName;
  FListMemTable[1].DataSet.DetailFields := 'id_participante'; //mtStatesID_COUNTRY.FieldName;
  FListMemTable[1].DataSet.IndexFieldNames := 'id_participante';//mtStatesID_COUNTRY.FieldName;



end;


end.
